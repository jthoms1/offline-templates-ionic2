/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/debug_context';
import * as import1 from '@angular/core/src/linker/template_ref';
import * as import2 from '@angular/common/src/directives/ng_if';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view';
import * as import5 from './app.component';
import * as import6 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_utils';
import * as import8 from '@angular/core/src/di/injector';
import * as import9 from '@angular/core/src/linker/view_type';
import * as import10 from '@angular/core/src/change_detection/change_detection';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/component_factory';
const styles_App:any[] = [];
  const nodeDebugInfos_App0:import0.StaticNodeDebugInfo[] = [new import0.StaticNodeDebugInfo([
    import1.TemplateRef,
    import2.NgIf
  ]
,null,{})];
var renderType_App:import3.RenderComponentType = null;
class _View_App0 extends import4.DebugAppView<import5.App> {
  _anchor_0:any;
  private _appEl_0:import6.AppElement;
  _TemplateRef_0_5:any;
  _NgIf_0_6:import2.NgIf;
  private _expr_0:any;
  constructor(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement) {
    super(_View_App0,renderType_App,import9.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import10.ChangeDetectionStrategy.CheckAlways,nodeDebugInfos_App0);
  }
  createInternal(rootSelector:string):import6.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,this.debug(0,0,0));
    this._appEl_0 = new import6.AppElement(0,null,this,this._anchor_0);
    this._TemplateRef_0_5 = new import1.TemplateRef_(this._appEl_0,viewFactory_App1);
    this._NgIf_0_6 = new import2.NgIf(this._appEl_0.vcRef,this._TemplateRef_0_5);
    this._expr_0 = import10.uninitialized;
    this.init([],[this._anchor_0],[],[]);
    return null;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import2.NgIf) && (0 === requestNodeIndex))) { return this._NgIf_0_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,5);
    const currVal_0:any = this.context.show;
    if (import7.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgIf_0_6.ngIf = currVal_0;
      this._expr_0 = currVal_0;
    }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_App0(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement):import4.AppView<import5.App> {
  if ((renderType_App === null)) { (renderType_App = viewUtils.createRenderComponentType('/Users/joshthomas/Workspace/tree-shake-ionic2/typescript-only-es2015/src/app/app.component.ts class App - inline template',0,import11.ViewEncapsulation.None,styles_App)); }
  return new _View_App0(viewUtils,parentInjector,declarationEl);
}
const nodeDebugInfos_App1:import0.StaticNodeDebugInfo[] = [
  new import0.StaticNodeDebugInfo([],null,{}),
  new import0.StaticNodeDebugInfo([],null,{})
]
;
class _View_App1 extends import4.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  constructor(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement) {
    super(_View_App1,renderType_App,import9.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import10.ChangeDetectionStrategy.CheckAlways,nodeDebugInfos_App1);
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._el_0 = this.renderer.createElement(null,'div',this.debug(0,0,0));
    this._text_1 = this.renderer.createText(this._el_0,'Hi',this.debug(1,0,18));
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[],[]);
    return null;
  }
}
function viewFactory_App1(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement):import4.AppView<any> {
  return new _View_App1(viewUtils,parentInjector,declarationEl);
}
const styles_App_Host:any[] = [];
const nodeDebugInfos_App_Host0:import0.StaticNodeDebugInfo[] = [new import0.StaticNodeDebugInfo([import5.App],import5.App,{})];
var renderType_App_Host:import3.RenderComponentType = null;
class _View_App_Host0 extends import4.DebugAppView<any> {
  _el_0:any;
  private _appEl_0:import6.AppElement;
  _App_0_4:import5.App;
  constructor(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement) {
    super(_View_App_Host0,renderType_App_Host,import9.ViewType.HOST,viewUtils,parentInjector,declarationEl,import10.ChangeDetectionStrategy.CheckAlways,nodeDebugInfos_App_Host0);
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._el_0 = this.selectOrCreateHostElement('my-app',rootSelector,this.debug(0,0,0));
    this._appEl_0 = new import6.AppElement(0,null,this,this._el_0);
    var compView_0:any = viewFactory_App0(this.viewUtils,this.injector(0),this._appEl_0);
    this._App_0_4 = new import5.App();
    this._appEl_0.initComponent(this._App_0_4,[],compView_0);
    compView_0.create(this._App_0_4,this.projectableNodes,null);
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.App) && (0 === requestNodeIndex))) { return this._App_0_4; }
    return notFoundResult;
  }
}
function viewFactory_App_Host0(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement):import4.AppView<any> {
  if ((renderType_App_Host === null)) { (renderType_App_Host = viewUtils.createRenderComponentType('',0,null,styles_App_Host)); }
  return new _View_App_Host0(viewUtils,parentInjector,declarationEl);
}
export const AppNgFactory:import12.ComponentFactory<import5.App> = new import12.ComponentFactory<import5.App>('my-app',viewFactory_App_Host0,import5.App);